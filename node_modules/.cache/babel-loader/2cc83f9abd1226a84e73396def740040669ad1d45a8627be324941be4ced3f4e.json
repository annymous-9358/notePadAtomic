{"ast":null,"code":"var _jsxFileName = \"/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/organisms/Settings/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button } from '../../atoms';\nimport { SettingItem } from '../../molecules';\nimport styles from './Settings.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  isOpen = false,\n  onClose,\n  settings = {},\n  onSettingToggle,\n  onDownloadNotes,\n  isDarkTheme = false,\n  className = ''\n}) => {\n  _s();\n  const [activeSection, setActiveSection] = useState('preferences');\n  if (!isOpen) return null;\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'preferences':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.settingGroup,\n            children: [/*#__PURE__*/_jsxDEV(SettingItem, {\n              title: \"Display line numbers\",\n              description: \"Controls whether the editor should display line numbers\",\n              checked: settings.displayLineNumbers,\n              onChange: () => onSettingToggle('displayLineNumbers'),\n              className: `${isDarkTheme ? 'darkTheme' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SettingItem, {\n              title: \"Markdown preview\",\n              description: \"Controls whether markdown preview mode is enabled\",\n              checked: settings.markdownPreview,\n              onChange: () => onSettingToggle('markdownPreview'),\n              className: `${isDarkTheme ? 'darkTheme' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      case 'data':\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Data Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.settingGroup,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.actionItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.actionInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Download all notes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Export all your notes as a single markdown file\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onDownloadNotes,\n                variant: \"outline\",\n                size: \"small\",\n                children: \"Download\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.settingsOverlay} ${isDarkTheme ? styles.darkTheme : ''} ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.settingsModal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: onClose,\n          variant: \"ghost\",\n          size: \"small\",\n          className: styles.closeButton,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingsBody,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingsSidebar,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setActiveSection('preferences'),\n            variant: activeSection === 'preferences' ? 'primary' : 'ghost',\n            className: styles.sidebarButton,\n            children: \"Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setActiveSection('data'),\n            variant: activeSection === 'data' ? 'primary' : 'ghost',\n            className: styles.sidebarButton,\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.settingsContent,\n          children: renderContent()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"XHw98iH2iJOtBPwJiqHLgtkNyEM=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","Button","SettingItem","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Settings","isOpen","onClose","settings","onSettingToggle","onDownloadNotes","isDarkTheme","className","_s","activeSection","setActiveSection","renderContent","children","fileName","_jsxFileName","lineNumber","columnNumber","settingGroup","title","description","checked","displayLineNumbers","onChange","markdownPreview","actionItem","actionInfo","onClick","variant","size","settingsOverlay","darkTheme","settingsModal","settingsHeader","closeButton","settingsBody","settingsSidebar","sidebarButton","settingsContent","_c","$RefreshReg$"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/organisms/Settings/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button } from '../../atoms';\nimport { SettingItem } from '../../molecules';\nimport styles from './Settings.module.css';\n\nconst Settings = ({ \n  isOpen = false,\n  onClose,\n  settings = {},\n  onSettingToggle,\n  onDownloadNotes,\n  isDarkTheme = false,\n  className = ''\n}) => {\n  const [activeSection, setActiveSection] = useState('preferences');\n\n  if (!isOpen) return null;\n\n  const renderContent = () => {\n    switch (activeSection) {\n      case 'preferences':\n        return (\n          <>\n            <h2>Preferences</h2>\n            <div className={styles.settingGroup}>\n              <SettingItem\n                title=\"Display line numbers\"\n                description=\"Controls whether the editor should display line numbers\"\n                checked={settings.displayLineNumbers}\n                onChange={() => onSettingToggle('displayLineNumbers')}\n                className={`${isDarkTheme ? 'darkTheme' : ''}`}\n              />\n              <SettingItem\n                title=\"Markdown preview\"\n                description=\"Controls whether markdown preview mode is enabled\"\n                checked={settings.markdownPreview}\n                onChange={() => onSettingToggle('markdownPreview')}\n                className={`${isDarkTheme ? 'darkTheme' : ''}`}\n              />\n            </div>\n          </>\n        );\n      case 'data':\n        return (\n          <>\n            <h2>Data Management</h2>\n            <div className={styles.settingGroup}>\n              <div className={styles.actionItem}>\n                <div className={styles.actionInfo}>\n                  <h3>Download all notes</h3>\n                  <p>Export all your notes as a single markdown file</p>\n                </div>\n                <Button\n                  onClick={onDownloadNotes}\n                  variant=\"outline\"\n                  size=\"small\"\n                >\n                  Download\n                </Button>\n              </div>\n            </div>\n          </>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className={`${styles.settingsOverlay} ${isDarkTheme ? styles.darkTheme : ''} ${className}`}>\n      <div className={styles.settingsModal}>\n        <div className={styles.settingsHeader}>\n          <h1>Settings</h1>\n          <Button\n            onClick={onClose}\n            variant=\"ghost\"\n            size=\"small\"\n            className={styles.closeButton}\n          >\n            ✕\n          </Button>\n        </div>\n\n        <div className={styles.settingsBody}>\n          <div className={styles.settingsSidebar}>\n            <Button\n              onClick={() => setActiveSection('preferences')}\n              variant={activeSection === 'preferences' ? 'primary' : 'ghost'}\n              className={styles.sidebarButton}\n            >\n              Preferences\n            </Button>\n            <Button\n              onClick={() => setActiveSection('data')}\n              variant={activeSection === 'data' ? 'primary' : 'ghost'}\n              className={styles.sidebarButton}\n            >\n              Data\n            </Button>\n          </div>\n\n          <div className={styles.settingsContent}>\n            {renderContent()}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,MAAM,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,MAAM,GAAG,KAAK;EACdC,OAAO;EACPC,QAAQ,GAAG,CAAC,CAAC;EACbC,eAAe;EACfC,eAAe;EACfC,WAAW,GAAG,KAAK;EACnBC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,aAAa,CAAC;EAEjE,IAAI,CAACS,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMU,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQF,aAAa;MACnB,KAAK,aAAa;QAChB,oBACEZ,OAAA,CAAAE,SAAA;UAAAa,QAAA,gBACEf,OAAA;YAAAe,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBnB,OAAA;YAAKU,SAAS,EAAEZ,MAAM,CAACsB,YAAa;YAAAL,QAAA,gBAClCf,OAAA,CAACH,WAAW;cACVwB,KAAK,EAAC,sBAAsB;cAC5BC,WAAW,EAAC,yDAAyD;cACrEC,OAAO,EAAEjB,QAAQ,CAACkB,kBAAmB;cACrCC,QAAQ,EAAEA,CAAA,KAAMlB,eAAe,CAAC,oBAAoB,CAAE;cACtDG,SAAS,EAAE,GAAGD,WAAW,GAAG,WAAW,GAAG,EAAE;YAAG;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACFnB,OAAA,CAACH,WAAW;cACVwB,KAAK,EAAC,kBAAkB;cACxBC,WAAW,EAAC,mDAAmD;cAC/DC,OAAO,EAAEjB,QAAQ,CAACoB,eAAgB;cAClCD,QAAQ,EAAEA,CAAA,KAAMlB,eAAe,CAAC,iBAAiB,CAAE;cACnDG,SAAS,EAAE,GAAGD,WAAW,GAAG,WAAW,GAAG,EAAE;YAAG;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CAAC;MAEP,KAAK,MAAM;QACT,oBACEnB,OAAA,CAAAE,SAAA;UAAAa,QAAA,gBACEf,OAAA;YAAAe,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxBnB,OAAA;YAAKU,SAAS,EAAEZ,MAAM,CAACsB,YAAa;YAAAL,QAAA,eAClCf,OAAA;cAAKU,SAAS,EAAEZ,MAAM,CAAC6B,UAAW;cAAAZ,QAAA,gBAChCf,OAAA;gBAAKU,SAAS,EAAEZ,MAAM,CAAC8B,UAAW;gBAAAb,QAAA,gBAChCf,OAAA;kBAAAe,QAAA,EAAI;gBAAkB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC3BnB,OAAA;kBAAAe,QAAA,EAAG;gBAA+C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC,eACNnB,OAAA,CAACJ,MAAM;gBACLiC,OAAO,EAAErB,eAAgB;gBACzBsB,OAAO,EAAC,SAAS;gBACjBC,IAAI,EAAC,OAAO;gBAAAhB,QAAA,EACb;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA,eACN,CAAC;MAEP;QACE,OAAO,IAAI;IACf;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKU,SAAS,EAAE,GAAGZ,MAAM,CAACkC,eAAe,IAAIvB,WAAW,GAAGX,MAAM,CAACmC,SAAS,GAAG,EAAE,IAAIvB,SAAS,EAAG;IAAAK,QAAA,eAC9Ff,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACoC,aAAc;MAAAnB,QAAA,gBACnCf,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACqC,cAAe;QAAApB,QAAA,gBACpCf,OAAA;UAAAe,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBnB,OAAA,CAACJ,MAAM;UACLiC,OAAO,EAAExB,OAAQ;UACjByB,OAAO,EAAC,OAAO;UACfC,IAAI,EAAC,OAAO;UACZrB,SAAS,EAAEZ,MAAM,CAACsC,WAAY;UAAArB,QAAA,EAC/B;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENnB,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACuC,YAAa;QAAAtB,QAAA,gBAClCf,OAAA;UAAKU,SAAS,EAAEZ,MAAM,CAACwC,eAAgB;UAAAvB,QAAA,gBACrCf,OAAA,CAACJ,MAAM;YACLiC,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAAC,aAAa,CAAE;YAC/CiB,OAAO,EAAElB,aAAa,KAAK,aAAa,GAAG,SAAS,GAAG,OAAQ;YAC/DF,SAAS,EAAEZ,MAAM,CAACyC,aAAc;YAAAxB,QAAA,EACjC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnB,OAAA,CAACJ,MAAM;YACLiC,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAAC,MAAM,CAAE;YACxCiB,OAAO,EAAElB,aAAa,KAAK,MAAM,GAAG,SAAS,GAAG,OAAQ;YACxDF,SAAS,EAAEZ,MAAM,CAACyC,aAAc;YAAAxB,QAAA,EACjC;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENnB,OAAA;UAAKU,SAAS,EAAEZ,MAAM,CAAC0C,eAAgB;UAAAzB,QAAA,EACpCD,aAAa,CAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACR,EAAA,CAvGIR,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAyGd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}