{"ast":null,"code":"var _jsxFileName = \"/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/organisms/NoteList/NoteList.js\";\nimport React from 'react';\nimport { Button } from '../atoms';\nimport { SearchInput, NoteItem } from '../molecules';\nimport styles from './NoteList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  notes = [],\n  selectedNoteId,\n  searchTerm,\n  onSearchChange,\n  onNoteSelect,\n  onNoteCreate,\n  onNoteStarToggle,\n  onNoteMenuClick,\n  isDarkTheme = false,\n  className = ''\n}) => {\n  const filteredNotes = notes.filter(note => {\n    var _note$title, _note$content;\n    return ((_note$title = note.title) === null || _note$title === void 0 ? void 0 : _note$title.toLowerCase().includes(searchTerm.toLowerCase())) || ((_note$content = note.content) === null || _note$content === void 0 ? void 0 : _note$content.toLowerCase().includes(searchTerm.toLowerCase()));\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.noteList} ${isDarkTheme ? styles.darkTheme : ''} ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.header,\n      children: [/*#__PURE__*/_jsxDEV(SearchInput, {\n        value: searchTerm,\n        onChange: e => onSearchChange(e.target.value),\n        placeholder: \"Search notes...\",\n        className: `${isDarkTheme ? 'darkTheme' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: onNoteCreate,\n        className: styles.newNoteButton,\n        children: \"New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.notes,\n      children: filteredNotes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emptyState,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No notes found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this) : filteredNotes.map(note => /*#__PURE__*/_jsxDEV(NoteItem, {\n        note: note,\n        isSelected: note.id === selectedNoteId,\n        onClick: () => onNoteSelect(note.id),\n        onStarToggle: onNoteStarToggle,\n        onMenuClick: onNoteMenuClick,\n        className: `${isDarkTheme ? 'darkTheme' : ''}`\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","Button","SearchInput","NoteItem","styles","jsxDEV","_jsxDEV","NoteList","notes","selectedNoteId","searchTerm","onSearchChange","onNoteSelect","onNoteCreate","onNoteStarToggle","onNoteMenuClick","isDarkTheme","className","filteredNotes","filter","note","_note$title","_note$content","title","toLowerCase","includes","content","noteList","darkTheme","children","header","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","newNoteButton","length","emptyState","map","isSelected","id","onStarToggle","onMenuClick","_c","$RefreshReg$"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/organisms/NoteList/NoteList.js"],"sourcesContent":["import React from 'react';\nimport { Button } from '../atoms';\nimport { SearchInput, NoteItem } from '../molecules';\nimport styles from './NoteList.module.css';\n\nconst NoteList = ({ \n  notes = [],\n  selectedNoteId,\n  searchTerm,\n  onSearchChange,\n  onNoteSelect,\n  onNoteCreate,\n  onNoteStarToggle,\n  onNoteMenuClick,\n  isDarkTheme = false,\n  className = ''\n}) => {\n  const filteredNotes = notes.filter(note =>\n    note.title?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    note.content?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className={`${styles.noteList} ${isDarkTheme ? styles.darkTheme : ''} ${className}`}>\n      <div className={styles.header}>\n        <SearchInput\n          value={searchTerm}\n          onChange={(e) => onSearchChange(e.target.value)}\n          placeholder=\"Search notes...\"\n          className={`${isDarkTheme ? 'darkTheme' : ''}`}\n        />\n        <Button\n          onClick={onNoteCreate}\n          className={styles.newNoteButton}\n        >\n          New Note\n        </Button>\n      </div>\n\n      <div className={styles.notes}>\n        {filteredNotes.length === 0 ? (\n          <div className={styles.emptyState}>\n            <p>No notes found</p>\n          </div>\n        ) : (\n          filteredNotes.map(note => (\n            <NoteItem\n              key={note.id}\n              note={note}\n              isSelected={note.id === selectedNoteId}\n              onClick={() => onNoteSelect(note.id)}\n              onStarToggle={onNoteStarToggle}\n              onMenuClick={onNoteMenuClick}\n              className={`${isDarkTheme ? 'darkTheme' : ''}`}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NoteList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}