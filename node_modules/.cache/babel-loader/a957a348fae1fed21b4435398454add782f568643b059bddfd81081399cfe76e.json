{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useNotes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const savedNotes = localStorage.getItem('takenote-notes');\n    if (savedNotes) {\n      try {\n        const parsedNotes = JSON.parse(savedNotes);\n        setNotes(parsedNotes);\n      } catch (error) {\n        console.error('Error parsing saved notes:', error);\n        // If parsing fails, create welcome note\n        const welcomeNote = {\n          id: Date.now(),\n          title: 'Welcome to TakeNote!',\n          content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          isFavorite: false,\n          isDeleted: false\n        };\n        setNotes([welcomeNote]);\n        setSelectedNote(welcomeNote);\n      }\n    } else {\n      const welcomeNote = {\n        id: Date.now(),\n        title: 'Welcome to TakeNote!',\n        content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        isFavorite: false,\n        isDeleted: false\n      };\n      setNotes([welcomeNote]);\n      setSelectedNote(welcomeNote);\n    }\n    setIsLoaded(true);\n  }, []);\n  useEffect(() => {\n    if (isLoaded) {\n      console.log('Saving notes to localStorage:', notes);\n      localStorage.setItem('takenote-notes', JSON.stringify(notes));\n      console.log('Notes saved successfully');\n    }\n  }, [notes, isLoaded]);\n  const createNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: '',\n      content: '',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setSelectedNote(newNote);\n    return newNote;\n  };\n  const updateNote = updatedNote => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n    setSelectedNote(updatedNote);\n  };\n  const deleteNote = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isDeleted: true,\n      updatedAt: new Date().toISOString()\n    } : note));\n    if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n      setSelectedNote(null);\n    }\n  };\n  const restoreNote = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isDeleted: false,\n      updatedAt: new Date().toISOString()\n    } : note));\n  };\n  const permanentDeleteNote = noteId => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n    if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n      setSelectedNote(null);\n    }\n  };\n  const toggleFavorite = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isFavorite: !note.isFavorite,\n      updatedAt: new Date().toISOString()\n    } : note));\n  };\n  const getFilteredNotes = category => {\n    switch (category) {\n      case 'favorites':\n        return notes.filter(note => note.isFavorite && !note.isDeleted);\n      case 'trash':\n        return notes.filter(note => note.isDeleted);\n      case 'all':\n      default:\n        return notes.filter(note => !note.isDeleted);\n    }\n  };\n  const getNoteCounts = () => {\n    return {\n      all: notes.filter(note => !note.isDeleted).length,\n      favorites: notes.filter(note => note.isFavorite && !note.isDeleted).length,\n      trash: notes.filter(note => note.isDeleted).length\n    };\n  };\n  return {\n    notes,\n    selectedNote,\n    setSelectedNote,\n    createNote,\n    updateNote,\n    deleteNote,\n    restoreNote,\n    permanentDeleteNote,\n    toggleFavorite,\n    getFilteredNotes,\n    getNoteCounts\n  };\n}\n_s(useNotes, \"ojkSjwpn7E42NijTSRIPZSFkDrU=\");\nexport default useNotes;","map":{"version":3,"names":["useState","useEffect","useNotes","_s","notes","setNotes","selectedNote","setSelectedNote","isLoaded","setIsLoaded","savedNotes","localStorage","getItem","parsedNotes","JSON","parse","error","console","welcomeNote","id","Date","now","title","content","createdAt","toISOString","updatedAt","isFavorite","isDeleted","log","setItem","stringify","createNote","newNote","prevNotes","updateNote","updatedNote","map","note","deleteNote","noteId","restoreNote","permanentDeleteNote","filter","toggleFavorite","getFilteredNotes","category","getNoteCounts","all","length","favorites","trash"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/hooks/useNotes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useNotes() {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = localStorage.getItem('takenote-notes');\n    if (savedNotes) {\n      try {\n        const parsedNotes = JSON.parse(savedNotes);\n        setNotes(parsedNotes);\n      } catch (error) {\n        console.error('Error parsing saved notes:', error);\n        // If parsing fails, create welcome note\n        const welcomeNote = {\n          id: Date.now(),\n          title: 'Welcome to TakeNote!',\n          content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n          createdAt: new Date().toISOString(),\n          updatedAt: new Date().toISOString(),\n          isFavorite: false,\n          isDeleted: false\n        };\n        setNotes([welcomeNote]);\n        setSelectedNote(welcomeNote);\n      }\n    } else {\n      const welcomeNote = {\n        id: Date.now(),\n        title: 'Welcome to TakeNote!',\n        content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        isFavorite: false,\n        isDeleted: false\n      };\n      setNotes([welcomeNote]);\n      setSelectedNote(welcomeNote);\n    }\n    setIsLoaded(true);\n  }, []);\n\n  useEffect(() => {\n    if (isLoaded) {\n      console.log('Saving notes to localStorage:', notes);\n      localStorage.setItem('takenote-notes', JSON.stringify(notes));\n      console.log('Notes saved successfully');\n    }\n  }, [notes, isLoaded]);\n\n  const createNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: '',\n      content: '',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setSelectedNote(newNote);\n    return newNote;\n  };\n\n  const updateNote = (updatedNote) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === updatedNote.id ? updatedNote : note\n      )\n    );\n    setSelectedNote(updatedNote);\n  };\n\n  const deleteNote = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { ...note, isDeleted: true, updatedAt: new Date().toISOString() }\n          : note\n      )\n    );\n    if (selectedNote?.id === noteId) {\n      setSelectedNote(null);\n    }\n  };\n\n  const restoreNote = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { ...note, isDeleted: false, updatedAt: new Date().toISOString() }\n          : note\n      )\n    );\n  };\n\n  const permanentDeleteNote = (noteId) => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n    if (selectedNote?.id === noteId) {\n      setSelectedNote(null);\n    }\n  };\n\n  const toggleFavorite = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { \n              ...note, \n              isFavorite: !note.isFavorite, \n              updatedAt: new Date().toISOString() \n            }\n          : note\n      )\n    );\n  };\n\n  const getFilteredNotes = (category) => {\n    switch (category) {\n      case 'favorites':\n        return notes.filter(note => note.isFavorite && !note.isDeleted);\n      case 'trash':\n        return notes.filter(note => note.isDeleted);\n      case 'all':\n      default:\n        return notes.filter(note => !note.isDeleted);\n    }\n  };\n\n  const getNoteCounts = () => {\n    return {\n      all: notes.filter(note => !note.isDeleted).length,\n      favorites: notes.filter(note => note.isFavorite && !note.isDeleted).length,\n      trash: notes.filter(note => note.isDeleted).length\n    };\n  };\n\n  return {\n    notes,\n    selectedNote,\n    setSelectedNote,\n    createNote,\n    updateNote,\n    deleteNote,\n    restoreNote,\n    permanentDeleteNote,\n    toggleFavorite,\n    getFilteredNotes,\n    getNoteCounts\n  };\n}\n\nexport default useNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}