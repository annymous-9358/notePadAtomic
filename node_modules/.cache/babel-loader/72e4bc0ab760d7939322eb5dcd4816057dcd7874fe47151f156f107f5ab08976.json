{"ast":null,"code":"var _jsxFileName = \"/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/Settings/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './Settings.module.css';\nimport { useTheme } from '../../context/ThemeContext';\nimport { useSettings } from '../../context/SettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings({\n  isOpen,\n  onClose\n}) {\n  _s();\n  const {\n    isDarkTheme,\n    toggleTheme\n  } = useTheme();\n  const {\n    settings,\n    toggleSetting\n  } = useSettings();\n  const [activeSection, setActiveSection] = useState('preferences');\n  const handleDownloadAllNotes = () => {\n    const notes = JSON.parse(localStorage.getItem('takenote-notes') || '[]');\n    const zip = notes.map(note => ({\n      filename: `${note.title || 'Untitled'}.md`,\n      content: note.content\n    }));\n\n    // Create a simple text file with all notes for now\n    const allNotesContent = notes.map(note => `# ${note.title || 'Untitled'}\\n\\n${note.content}\\n\\n---\\n\\n`).join('');\n    const element = document.createElement('a');\n    const file = new Blob([allNotesContent], {\n      type: 'text/markdown'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = 'all-notes.md';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n  const handleExportBackup = () => {\n    const notes = localStorage.getItem('takenote-notes') || '[]';\n    const settings = localStorage.getItem('takenote-settings') || '{}';\n    const theme = localStorage.getItem('takenote-theme') || 'light';\n    const backup = {\n      notes: JSON.parse(notes),\n      settings: JSON.parse(settings),\n      theme,\n      exportDate: new Date().toISOString()\n    };\n    const element = document.createElement('a');\n    const file = new Blob([JSON.stringify(backup, null, 2)], {\n      type: 'application/json'\n    });\n    element.href = URL.createObjectURL(file);\n    element.download = `takenote-backup-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n  const handleImportBackup = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.json';\n    input.onchange = e => {\n      const file = e.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = event => {\n          try {\n            const backup = JSON.parse(event.target.result);\n            if (backup.notes) localStorage.setItem('takenote-notes', JSON.stringify(backup.notes));\n            if (backup.settings) localStorage.setItem('takenote-settings', JSON.stringify(backup.settings));\n            if (backup.theme) localStorage.setItem('takenote-theme', backup.theme);\n            alert('Backup imported successfully! Please refresh the page.');\n          } catch (error) {\n            alert('Invalid backup file format.');\n          }\n        };\n        reader.readAsText(file);\n      }\n    };\n    input.click();\n  };\n  if (!isOpen) return null;\n  const handleOverlayClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.overlay,\n    onClick: handleOverlayClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.modal} ${isDarkTheme ? styles.darkTheme : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.header,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.userInfo,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.userName,\n            children: \"Demo User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.logoutButton,\n            children: \"Log out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.closeButton,\n          onClick: onClose,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.sidebar,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.sidebarItem} ${activeSection === 'preferences' ? styles.active : ''}`,\n            onClick: () => setActiveSection('preferences'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: \"\\u2699\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Preferences\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.sidebarItem} ${activeSection === 'shortcuts' ? styles.active : ''}`,\n            onClick: () => setActiveSection('shortcuts'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: \"\\u2328\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Keyboard shortcuts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.sidebarItem} ${activeSection === 'data' ? styles.active : ''}`,\n            onClick: () => setActiveSection('data'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Data management\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${styles.sidebarItem} ${activeSection === 'about' ? styles.active : ''}`,\n            onClick: () => setActiveSection('about'),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.icon,\n              children: \"\\u2139\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"About TakeNote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.main,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.settingGroup,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.settingItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.settingInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Active line highlight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Controls whether the editor should highlight the active line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.activeLineHighlight,\n                  onChange: () => toggleSetting('activeLineHighlight')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.slider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.settingItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.settingInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Display line numbers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Controls whether the editor should display line numbers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.displayLineNumbers,\n                  onChange: () => toggleSetting('displayLineNumbers')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.slider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.settingItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.settingInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Scroll past end\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Controls whether the editor will add blank space to the end of all files\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.scrollPastEnd,\n                  onChange: () => toggleSetting('scrollPastEnd')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.slider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.settingItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.settingInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Markdown preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Controls whether markdown preview mode is enabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.markdownPreview,\n                  onChange: () => toggleSetting('markdownPreview')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.slider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.settingItem,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.settingInfo,\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Dark mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Controls the application theme\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: styles.toggle,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: isDarkTheme,\n                  onChange: toggleTheme\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: styles.slider\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"bd+33YT5qrCOuDFhnFi6oG3ERg4=\", false, function () {\n  return [useTheme, useSettings];\n});\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","styles","useTheme","useSettings","jsxDEV","_jsxDEV","Settings","isOpen","onClose","_s","isDarkTheme","toggleTheme","settings","toggleSetting","activeSection","setActiveSection","handleDownloadAllNotes","notes","JSON","parse","localStorage","getItem","zip","map","note","filename","title","content","allNotesContent","join","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","removeChild","handleExportBackup","theme","backup","exportDate","Date","toISOString","stringify","split","handleImportBackup","input","accept","onchange","e","target","files","reader","FileReader","onload","event","result","setItem","alert","error","readAsText","handleOverlayClick","currentTarget","className","overlay","onClick","children","modal","darkTheme","header","userInfo","userName","fileName","_jsxFileName","lineNumber","columnNumber","logoutButton","closeButton","sidebar","sidebarItem","active","icon","main","settingGroup","settingItem","settingInfo","toggle","checked","activeLineHighlight","onChange","slider","displayLineNumbers","scrollPastEnd","markdownPreview","_c","$RefreshReg$"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/Settings/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './Settings.module.css';\nimport { useTheme } from '../../context/ThemeContext';\nimport { useSettings } from '../../context/SettingsContext';\n\nfunction Settings({ isOpen, onClose }) {\n  const { isDarkTheme, toggleTheme } = useTheme();\n  const { settings, toggleSetting } = useSettings();\n  const [activeSection, setActiveSection] = useState('preferences');\n\n  const handleDownloadAllNotes = () => {\n    const notes = JSON.parse(localStorage.getItem('takenote-notes') || '[]');\n    const zip = notes.map(note => ({\n      filename: `${note.title || 'Untitled'}.md`,\n      content: note.content\n    }));\n    \n    // Create a simple text file with all notes for now\n    const allNotesContent = notes.map(note => \n      `# ${note.title || 'Untitled'}\\n\\n${note.content}\\n\\n---\\n\\n`\n    ).join('');\n    \n    const element = document.createElement('a');\n    const file = new Blob([allNotesContent], { type: 'text/markdown' });\n    element.href = URL.createObjectURL(file);\n    element.download = 'all-notes.md';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const handleExportBackup = () => {\n    const notes = localStorage.getItem('takenote-notes') || '[]';\n    const settings = localStorage.getItem('takenote-settings') || '{}';\n    const theme = localStorage.getItem('takenote-theme') || 'light';\n    \n    const backup = {\n      notes: JSON.parse(notes),\n      settings: JSON.parse(settings),\n      theme,\n      exportDate: new Date().toISOString()\n    };\n    \n    const element = document.createElement('a');\n    const file = new Blob([JSON.stringify(backup, null, 2)], { type: 'application/json' });\n    element.href = URL.createObjectURL(file);\n    element.download = `takenote-backup-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  const handleImportBackup = () => {\n    const input = document.createElement('input');\n    input.type = 'file';\n    input.accept = '.json';\n    input.onchange = (e) => {\n      const file = e.target.files[0];\n      if (file) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          try {\n            const backup = JSON.parse(event.target.result);\n            if (backup.notes) localStorage.setItem('takenote-notes', JSON.stringify(backup.notes));\n            if (backup.settings) localStorage.setItem('takenote-settings', JSON.stringify(backup.settings));\n            if (backup.theme) localStorage.setItem('takenote-theme', backup.theme);\n            alert('Backup imported successfully! Please refresh the page.');\n          } catch (error) {\n            alert('Invalid backup file format.');\n          }\n        };\n        reader.readAsText(file);\n      }\n    };\n    input.click();\n  };\n\n  if (!isOpen) return null; \n\n  const handleOverlayClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className={styles.overlay} onClick={handleOverlayClick}>\n      <div className={`${styles.modal} ${isDarkTheme ? styles.darkTheme : ''}`}>\n        <div className={styles.header}>\n          <div className={styles.userInfo}>\n            <span className={styles.userName}>Demo User</span>\n            <button className={styles.logoutButton}>Log out</button>\n          </div>\n          <button className={styles.closeButton} onClick={onClose}>\n            ✕\n          </button>\n        </div>\n\n        <div className={styles.content}>\n          <div className={styles.sidebar}>\n            <div \n              className={`${styles.sidebarItem} ${activeSection === 'preferences' ? styles.active : ''}`}\n              onClick={() => setActiveSection('preferences')}\n            >\n              <span className={styles.icon}>⚙</span>\n              <span>Preferences</span>\n            </div>\n            <div \n              className={`${styles.sidebarItem} ${activeSection === 'shortcuts' ? styles.active : ''}`}\n              onClick={() => setActiveSection('shortcuts')}\n            >\n              <span className={styles.icon}>⌨</span>\n              <span>Keyboard shortcuts</span>\n            </div>\n            <div \n              className={`${styles.sidebarItem} ${activeSection === 'data' ? styles.active : ''}`}\n              onClick={() => setActiveSection('data')}\n            >\n              <span className={styles.icon}>📊</span>\n              <span>Data management</span>\n            </div>\n            <div \n              className={`${styles.sidebarItem} ${activeSection === 'about' ? styles.active : ''}`}\n              onClick={() => setActiveSection('about')}\n            >\n              <span className={styles.icon}>ℹ</span>\n              <span>About TakeNote</span>\n            </div>\n          </div>\n\n          <div className={styles.main}>\n            <h2>Preferences</h2>\n            \n            <div className={styles.settingGroup}>\n              <div className={styles.settingItem}>\n                <div className={styles.settingInfo}>\n                  <h3>Active line highlight</h3>\n                  <p>Controls whether the editor should highlight the active line</p>\n                </div>\n                <label className={styles.toggle}>\n                  <input \n                    type=\"checkbox\" \n                    checked={settings.activeLineHighlight}\n                    onChange={() => toggleSetting('activeLineHighlight')}\n                  />\n                  <span className={styles.slider}></span>\n                </label>\n              </div>\n\n              <div className={styles.settingItem}>\n                <div className={styles.settingInfo}>\n                  <h3>Display line numbers</h3>\n                  <p>Controls whether the editor should display line numbers</p>\n                </div>\n                <label className={styles.toggle}>\n                  <input \n                    type=\"checkbox\" \n                    checked={settings.displayLineNumbers}\n                    onChange={() => toggleSetting('displayLineNumbers')}\n                  />\n                  <span className={styles.slider}></span>\n                </label>\n              </div>\n\n              <div className={styles.settingItem}>\n                <div className={styles.settingInfo}>\n                  <h3>Scroll past end</h3>\n                  <p>Controls whether the editor will add blank space to the end of all files</p>\n                </div>\n                <label className={styles.toggle}>\n                  <input \n                    type=\"checkbox\" \n                    checked={settings.scrollPastEnd}\n                    onChange={() => toggleSetting('scrollPastEnd')}\n                  />\n                  <span className={styles.slider}></span>\n                </label>\n              </div>\n\n              <div className={styles.settingItem}>\n                <div className={styles.settingInfo}>\n                  <h3>Markdown preview</h3>\n                  <p>Controls whether markdown preview mode is enabled</p>\n                </div>\n                <label className={styles.toggle}>\n                  <input \n                    type=\"checkbox\" \n                    checked={settings.markdownPreview}\n                    onChange={() => toggleSetting('markdownPreview')}\n                  />\n                  <span className={styles.slider}></span>\n                </label>\n              </div>\n\n              <div className={styles.settingItem}>\n                <div className={styles.settingInfo}>\n                  <h3>Dark mode</h3>\n                  <p>Controls the application theme</p>\n                </div>\n                <label className={styles.toggle}>\n                  <input \n                    type=\"checkbox\" \n                    checked={isDarkTheme}\n                    onChange={toggleTheme}\n                  />\n                  <span className={styles.slider}></span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}