{"ast":null,"code":"var _jsxFileName = \"/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/NoteEditor/NoteEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './NoteEditor.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoteEditor({\n  note,\n  onNoteUpdate\n}) {\n  _s();\n  const [isPreview, setIsPreview] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n  if (!note) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.editor,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.emptyState,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a note to start editing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a note from the list or create a new one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n  const handleTitleChange = e => {\n    onNoteUpdate({\n      ...note,\n      title: e.target.value,\n      updatedAt: new Date().toISOString()\n    });\n  };\n  const handleContentChange = e => {\n    onNoteUpdate({\n      ...note,\n      content: e.target.value,\n      updatedAt: new Date().toISOString()\n    });\n  };\n  const formatText = format => {\n    const textarea = document.querySelector(`.${styles.contentArea}`);\n    if (!textarea) return;\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = note.content.substring(start, end);\n    let formattedText = '';\n    let newCursorPos = start;\n    switch (format) {\n      case 'bold':\n        formattedText = `**${selectedText}**`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'italic':\n        formattedText = `*${selectedText}*`;\n        newCursorPos = start + (selectedText ? 1 : 1);\n        break;\n      case 'heading':\n        formattedText = `# ${selectedText}`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'bullet':\n        formattedText = `- ${selectedText}`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'code':\n        formattedText = `\\`${selectedText}\\``;\n        newCursorPos = start + (selectedText ? 1 : 1);\n        break;\n      default:\n        return;\n    }\n    const newContent = note.content.substring(0, start) + formattedText + note.content.substring(end);\n    onNoteUpdate({\n      ...note,\n      content: newContent,\n      updatedAt: new Date().toISOString()\n    });\n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(newCursorPos, newCursorPos + (selectedText ? selectedText.length : 0));\n    }, 0);\n  };\n  const renderPreview = () => {\n    let html = note.content.replace(/^# (.*$)/gim, '<h1>$1</h1>').replace(/^## (.*$)/gim, '<h2>$1</h2>').replace(/^### (.*$)/gim, '<h3>$1</h3>').replace(/\\*\\*(.*)\\*\\*/gim, '<strong>$1</strong>').replace(/\\*(.*)\\*/gim, '<em>$1</em>').replace(/`(.*)`/gim, '<code>$1</code>').replace(/^- (.*$)/gim, '<li>$1</li>').replace(/\\n/gim, '<br>');\n    if (html.includes('<li>')) {\n      html = html.replace(/(<li>.*<\\/li>)/s, '<ul>$1</ul>');\n    }\n    return {\n      __html: html\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.editor,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.toolbar,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: note.title,\n        onChange: handleTitleChange,\n        placeholder: \"Note title...\",\n        className: styles.titleInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: note.content,\n      onChange: handleContentChange,\n      placeholder: \"Start writing your note...\",\n      className: styles.contentArea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.footer,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Last updated: \", new Date(note.updatedAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteEditor, \"eVjjsDveFwDbGaLtIn/7Pj5f/j4=\");\n_c = NoteEditor;\nexport default NoteEditor;\nvar _c;\n$RefreshReg$(_c, \"NoteEditor\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","NoteEditor","note","onNoteUpdate","_s","isPreview","setIsPreview","showOptions","setShowOptions","className","editor","children","emptyState","fileName","_jsxFileName","lineNumber","columnNumber","handleTitleChange","e","title","target","value","updatedAt","Date","toISOString","handleContentChange","content","formatText","format","textarea","document","querySelector","contentArea","start","selectionStart","end","selectionEnd","selectedText","substring","formattedText","newCursorPos","newContent","setTimeout","focus","setSelectionRange","length","renderPreview","html","replace","includes","__html","toolbar","type","onChange","placeholder","titleInput","footer","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/NoteEditor/NoteEditor.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styles from './NoteEditor.module.css';\n\nfunction NoteEditor({ note, onNoteUpdate }) {\n  const [isPreview, setIsPreview] = useState(false);\n  const [showOptions, setShowOptions] = useState(false);\n\n  if (!note) {\n    return (\n      <div className={styles.editor}>\n        <div className={styles.emptyState}>\n          <h3>Select a note to start editing</h3>\n          <p>Choose a note from the list or create a new one</p>\n        </div>\n      </div>\n    );\n  }\n\n  const handleTitleChange = (e) => {\n    onNoteUpdate({\n      ...note,\n      title: e.target.value,\n      updatedAt: new Date().toISOString()\n    });\n  };\n\n  const handleContentChange = (e) => {\n    onNoteUpdate({\n      ...note,\n      content: e.target.value,\n      updatedAt: new Date().toISOString()\n    });\n  };\n\n  const formatText = (format) => {\n    const textarea = document.querySelector(`.${styles.contentArea}`);\n    if (!textarea) return;\n\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = note.content.substring(start, end);\n    \n    let formattedText = '';\n    let newCursorPos = start;\n\n    switch (format) {\n      case 'bold':\n        formattedText = `**${selectedText}**`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'italic':\n        formattedText = `*${selectedText}*`;\n        newCursorPos = start + (selectedText ? 1 : 1);\n        break;\n      case 'heading':\n        formattedText = `# ${selectedText}`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'bullet':\n        formattedText = `- ${selectedText}`;\n        newCursorPos = start + (selectedText ? 2 : 2);\n        break;\n      case 'code':\n        formattedText = `\\`${selectedText}\\``;\n        newCursorPos = start + (selectedText ? 1 : 1);\n        break;\n      default:\n        return;\n    }\n\n    const newContent = note.content.substring(0, start) + formattedText + note.content.substring(end);\n    \n    onNoteUpdate({\n      ...note,\n      content: newContent,\n      updatedAt: new Date().toISOString()\n    });\n\n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(newCursorPos, newCursorPos + (selectedText ? selectedText.length : 0));\n    }, 0);\n  };\n\n  const renderPreview = () => {\n    let html = note.content\n      .replace(/^# (.*$)/gim, '<h1>$1</h1>')\n      .replace(/^## (.*$)/gim, '<h2>$1</h2>')\n      .replace(/^### (.*$)/gim, '<h3>$1</h3>')\n      .replace(/\\*\\*(.*)\\*\\*/gim, '<strong>$1</strong>')\n      .replace(/\\*(.*)\\*/gim, '<em>$1</em>')\n      .replace(/`(.*)`/gim, '<code>$1</code>')\n      .replace(/^- (.*$)/gim, '<li>$1</li>')\n      .replace(/\\n/gim, '<br>');\n\n    if (html.includes('<li>')) {\n      html = html.replace(/(<li>.*<\\/li>)/s, '<ul>$1</ul>');\n    }\n\n    return { __html: html };\n  };\n\n  return (\n    <div className={styles.editor}>\n      <div className={styles.toolbar}>\n        <input\n          type=\"text\"\n          value={note.title}\n          onChange={handleTitleChange}\n          placeholder=\"Note title...\"\n          className={styles.titleInput}\n        />\n      </div>\n\n      <textarea\n        value={note.content}\n        onChange={handleContentChange}\n        placeholder=\"Start writing your note...\"\n        className={styles.contentArea}\n      />\n\n      <div className={styles.footer}>\n        <span>Last updated: {new Date(note.updatedAt).toLocaleString()}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default NoteEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}