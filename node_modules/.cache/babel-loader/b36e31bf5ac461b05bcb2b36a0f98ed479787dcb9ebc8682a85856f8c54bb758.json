{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const SettingsContext=/*#__PURE__*/createContext();export const useSettings=()=>{const context=useContext(SettingsContext);if(!context){throw new Error('useSettings must be used within a SettingsProvider');}return context;};export const SettingsProvider=_ref=>{let{children}=_ref;const[settings,setSettings]=useState({displayLineNumbers:false,markdownPreview:true});useEffect(()=>{const savedSettings=localStorage.getItem('notepad-settings');if(savedSettings){setSettings(JSON.parse(savedSettings));}},[]);useEffect(()=>{localStorage.setItem('notepad-settings',JSON.stringify(settings));},[settings]);const updateSetting=(settingName,value)=>{setSettings(prev=>({...prev,[settingName]:value}));};const toggleSetting=settingName=>{setSettings(prev=>({...prev,[settingName]:!prev[settingName]}));};return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{settings,updateSetting,toggleSetting},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","SettingsContext","useSettings","context","Error","SettingsProvider","_ref","children","settings","setSettings","displayLineNumbers","markdownPreview","savedSettings","localStorage","getItem","JSON","parse","setItem","stringify","updateSetting","settingName","value","prev","toggleSetting","Provider"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/context/SettingsContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst SettingsContext = createContext();\n\nexport const useSettings = () => {\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};\n\nexport const SettingsProvider = ({ children }) => {\n  const [settings, setSettings] = useState({\n    displayLineNumbers: false,\n    markdownPreview: true\n  });\n\n  useEffect(() => {\n    const savedSettings = localStorage.getItem('notepad-settings');\n    if (savedSettings) {\n      setSettings(JSON.parse(savedSettings));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('notepad-settings', JSON.stringify(settings));\n  }, [settings]);\n\n  const updateSetting = (settingName, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [settingName]: value\n    }));\n  };\n\n  const toggleSetting = (settingName) => {\n    setSettings(prev => ({\n      ...prev,\n      [settingName]: !prev[settingName]\n    }));\n  };\n\n  return (\n    <SettingsContext.Provider value={{\n      settings,\n      updateSetting,\n      toggleSetting\n    }}>\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,eAAe,cAAGN,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAO,WAAW,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,eAAe,CAAC,CAC3C,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,oDAAoD,CAAC,CACvE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,CACvCa,kBAAkB,CAAE,KAAK,CACzBC,eAAe,CAAE,IACnB,CAAC,CAAC,CAEFb,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,CAC9D,GAAIF,aAAa,CAAE,CACjBH,WAAW,CAACM,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC,CACxC,CACF,CAAC,CAAE,EAAE,CAAC,CAENd,SAAS,CAAC,IAAM,CACde,YAAY,CAACI,OAAO,CAAC,kBAAkB,CAAEF,IAAI,CAACG,SAAS,CAACV,QAAQ,CAAC,CAAC,CACpE,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAW,aAAa,CAAGA,CAACC,WAAW,CAAEC,KAAK,GAAK,CAC5CZ,WAAW,CAACa,IAAI,GAAK,CACnB,GAAGA,IAAI,CACP,CAACF,WAAW,EAAGC,KACjB,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAE,aAAa,CAAIH,WAAW,EAAK,CACrCX,WAAW,CAACa,IAAI,GAAK,CACnB,GAAGA,IAAI,CACP,CAACF,WAAW,EAAG,CAACE,IAAI,CAACF,WAAW,CAClC,CAAC,CAAC,CAAC,CACL,CAAC,CAED,mBACEpB,IAAA,CAACC,eAAe,CAACuB,QAAQ,EAACH,KAAK,CAAE,CAC/Bb,QAAQ,CACRW,aAAa,CACbI,aACF,CAAE,CAAAhB,QAAA,CACCA,QAAQ,CACe,CAAC,CAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}