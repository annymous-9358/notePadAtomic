{"ast":null,"code":"var _jsxFileName = \"/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/LocalStorageTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LocalStorageTest = () => {\n  _s();\n  const [status, setStatus] = useState('Testing...');\n  const [notes, setNotes] = useState([]);\n  const refreshStatus = () => {\n    try {\n      // Test basic localStorage functionality\n      localStorage.setItem('test', 'working');\n      const testResult = localStorage.getItem('test');\n      localStorage.removeItem('test');\n      if (testResult === 'working') {\n        // Check if notes exist\n        const savedNotes = localStorage.getItem('takenote-notes');\n        if (savedNotes) {\n          const parsed = JSON.parse(savedNotes);\n          setNotes(parsed);\n          setStatus(`✅ localStorage working - ${parsed.length} notes found`);\n        } else {\n          setStatus('✅ localStorage working - No notes found');\n          setNotes([]);\n        }\n      } else {\n        setStatus('❌ localStorage test failed');\n      }\n    } catch (error) {\n      setStatus(`❌ localStorage error: ${error.message}`);\n    }\n  };\n  useEffect(() => {\n    refreshStatus();\n\n    // Refresh status every 2 seconds to see live updates\n    const interval = setInterval(refreshStatus, 2000);\n    return () => clearInterval(interval);\n  }, []);\n  const clearStorage = () => {\n    localStorage.removeItem('takenote-notes');\n    setNotes([]);\n    refreshStatus();\n  };\n  const addTestNote = () => {\n    const existingNotes = JSON.parse(localStorage.getItem('takenote-notes') || '[]');\n    const newNote = {\n      id: Date.now(),\n      title: `Test Note ${existingNotes.length + 1}`,\n      content: 'This is a test note to verify localStorage functionality.',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    const updatedNotes = [newNote, ...existingNotes];\n    localStorage.setItem('takenote-notes', JSON.stringify(updatedNotes));\n    refreshStatus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      background: '#f0f0f0',\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      fontSize: '12px',\n      zIndex: 1000,\n      maxWidth: '300px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"localStorage Status:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), notes.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stored Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), notes.slice(0, 3).map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: '2px 0',\n          fontSize: '11px'\n        },\n        children: [\"\\u2022 \", note.title || 'Untitled', \" (\", note.isDeleted ? 'Deleted' : 'Active', \")\"]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)), notes.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '11px'\n        },\n        children: [\"...and \", notes.length - 3, \" more\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '5px',\n        display: 'flex',\n        gap: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTestNote,\n        style: {\n          padding: '2px 5px',\n          fontSize: '11px',\n          background: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Add Test Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearStorage,\n        style: {\n          padding: '2px 5px',\n          fontSize: '11px',\n          background: '#ff6b6b',\n          color: 'white',\n          border: 'none',\n          borderRadius: '3px',\n          cursor: 'pointer'\n        },\n        children: \"Clear Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(LocalStorageTest, \"SfgLqRYOCQ/8mJ0PD4c23L9CtBY=\");\n_c = LocalStorageTest;\nexport default LocalStorageTest;\nvar _c;\n$RefreshReg$(_c, \"LocalStorageTest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LocalStorageTest","_s","status","setStatus","notes","setNotes","refreshStatus","localStorage","setItem","testResult","getItem","removeItem","savedNotes","parsed","JSON","parse","length","error","message","interval","setInterval","clearInterval","clearStorage","addTestNote","existingNotes","newNote","id","Date","now","title","content","createdAt","toISOString","updatedAt","isFavorite","isDeleted","updatedNotes","stringify","style","position","top","right","background","padding","border","borderRadius","fontSize","zIndex","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","map","note","margin","marginTop","display","gap","onClick","color","cursor","_c","$RefreshReg$"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/components/LocalStorageTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst LocalStorageTest = () => {\n  const [status, setStatus] = useState('Testing...');\n  const [notes, setNotes] = useState([]);\n\n  const refreshStatus = () => {\n    try {\n      // Test basic localStorage functionality\n      localStorage.setItem('test', 'working');\n      const testResult = localStorage.getItem('test');\n      localStorage.removeItem('test');\n      \n      if (testResult === 'working') {\n        // Check if notes exist\n        const savedNotes = localStorage.getItem('takenote-notes');\n        if (savedNotes) {\n          const parsed = JSON.parse(savedNotes);\n          setNotes(parsed);\n          setStatus(`✅ localStorage working - ${parsed.length} notes found`);\n        } else {\n          setStatus('✅ localStorage working - No notes found');\n          setNotes([]);\n        }\n      } else {\n        setStatus('❌ localStorage test failed');\n      }\n    } catch (error) {\n      setStatus(`❌ localStorage error: ${error.message}`);\n    }\n  };\n\n  useEffect(() => {\n    refreshStatus();\n    \n    // Refresh status every 2 seconds to see live updates\n    const interval = setInterval(refreshStatus, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const clearStorage = () => {\n    localStorage.removeItem('takenote-notes');\n    setNotes([]);\n    refreshStatus();\n  };\n\n  const addTestNote = () => {\n    const existingNotes = JSON.parse(localStorage.getItem('takenote-notes') || '[]');\n    const newNote = {\n      id: Date.now(),\n      title: `Test Note ${existingNotes.length + 1}`,\n      content: 'This is a test note to verify localStorage functionality.',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    \n    const updatedNotes = [newNote, ...existingNotes];\n    localStorage.setItem('takenote-notes', JSON.stringify(updatedNotes));\n    refreshStatus();\n  };\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: '10px',\n      right: '10px',\n      background: '#f0f0f0',\n      padding: '10px',\n      border: '1px solid #ccc',\n      borderRadius: '5px',\n      fontSize: '12px',\n      zIndex: 1000,\n      maxWidth: '300px'\n    }}>\n      <div><strong>localStorage Status:</strong></div>\n      <div>{status}</div>\n      {notes.length > 0 && (\n        <div>\n          <div><strong>Stored Notes:</strong></div>\n          {notes.slice(0, 3).map(note => (\n            <div key={note.id} style={{ margin: '2px 0', fontSize: '11px' }}>\n              • {note.title || 'Untitled'} ({note.isDeleted ? 'Deleted' : 'Active'})\n            </div>\n          ))}\n          {notes.length > 3 && <div style={{ fontSize: '11px' }}>...and {notes.length - 3} more</div>}\n        </div>\n      )}\n      <div style={{ marginTop: '5px', display: 'flex', gap: '5px' }}>\n        <button \n          onClick={addTestNote}\n          style={{\n            padding: '2px 5px',\n            fontSize: '11px',\n            background: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '3px',\n            cursor: 'pointer'\n          }}\n        >\n          Add Test Note\n        </button>\n        <button \n          onClick={clearStorage}\n          style={{\n            padding: '2px 5px',\n            fontSize: '11px',\n            background: '#ff6b6b',\n            color: 'white',\n            border: 'none',\n            borderRadius: '3px',\n            cursor: 'pointer'\n          }}\n        >\n          Clear Storage\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default LocalStorageTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}