{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nfunction useNotes() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    console.log('Loading notes from localStorage...');\n    const savedNotes = localStorage.getItem('takenote-notes');\n    console.log('Saved notes:', savedNotes);\n    if (savedNotes) {\n      const parsedNotes = JSON.parse(savedNotes);\n      console.log('Parsed notes:', parsedNotes);\n      setNotes(parsedNotes);\n    } else {\n      console.log('No saved notes found, creating welcome note');\n      const welcomeNote = {\n        id: Date.now(),\n        title: 'Welcome to TakeNote!',\n        content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        isFavorite: false,\n        isDeleted: false\n      };\n      setNotes([welcomeNote]);\n      setSelectedNote(welcomeNote);\n    }\n  }, []);\n  useEffect(() => {\n    console.log('Saving notes to localStorage:', notes);\n    localStorage.setItem('takenote-notes', JSON.stringify(notes));\n  }, [notes]);\n  const createNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: '',\n      content: '',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setSelectedNote(newNote);\n    return newNote;\n  };\n  const updateNote = updatedNote => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === updatedNote.id ? updatedNote : note));\n    setSelectedNote(updatedNote);\n  };\n  const deleteNote = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isDeleted: true,\n      updatedAt: new Date().toISOString()\n    } : note));\n    if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n      setSelectedNote(null);\n    }\n  };\n  const restoreNote = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isDeleted: false,\n      updatedAt: new Date().toISOString()\n    } : note));\n  };\n  const permanentDeleteNote = noteId => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n    if ((selectedNote === null || selectedNote === void 0 ? void 0 : selectedNote.id) === noteId) {\n      setSelectedNote(null);\n    }\n  };\n  const toggleFavorite = noteId => {\n    setNotes(prevNotes => prevNotes.map(note => note.id === noteId ? {\n      ...note,\n      isFavorite: !note.isFavorite,\n      updatedAt: new Date().toISOString()\n    } : note));\n  };\n  const getFilteredNotes = category => {\n    switch (category) {\n      case 'favorites':\n        return notes.filter(note => note.isFavorite && !note.isDeleted);\n      case 'trash':\n        return notes.filter(note => note.isDeleted);\n      case 'all':\n      default:\n        return notes.filter(note => !note.isDeleted);\n    }\n  };\n  const getNoteCounts = () => {\n    return {\n      all: notes.filter(note => !note.isDeleted).length,\n      favorites: notes.filter(note => note.isFavorite && !note.isDeleted).length,\n      trash: notes.filter(note => note.isDeleted).length\n    };\n  };\n  return {\n    notes,\n    selectedNote,\n    setSelectedNote,\n    createNote,\n    updateNote,\n    deleteNote,\n    restoreNote,\n    permanentDeleteNote,\n    toggleFavorite,\n    getFilteredNotes,\n    getNoteCounts\n  };\n}\n_s(useNotes, \"qbGquP2p7RG0CZcWa6OuyKTgb44=\");\nexport default useNotes;","map":{"version":3,"names":["useState","useEffect","useNotes","_s","notes","setNotes","selectedNote","setSelectedNote","console","log","savedNotes","localStorage","getItem","parsedNotes","JSON","parse","welcomeNote","id","Date","now","title","content","createdAt","toISOString","updatedAt","isFavorite","isDeleted","setItem","stringify","createNote","newNote","prevNotes","updateNote","updatedNote","map","note","deleteNote","noteId","restoreNote","permanentDeleteNote","filter","toggleFavorite","getFilteredNotes","category","getNoteCounts","all","length","favorites","trash"],"sources":["/Users/kunikjain/Desktop/AurigaIT_Intern/react/notepad/src/hooks/useNotes.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nfunction useNotes() {\n  const [notes, setNotes] = useState([]);\n  const [selectedNote, setSelectedNote] = useState(null);\n\n  useEffect(() => {\n    console.log('Loading notes from localStorage...');\n    const savedNotes = localStorage.getItem('takenote-notes');\n    console.log('Saved notes:', savedNotes);\n    \n    if (savedNotes) {\n      const parsedNotes = JSON.parse(savedNotes);\n      console.log('Parsed notes:', parsedNotes);\n      setNotes(parsedNotes);\n    } else {\n      console.log('No saved notes found, creating welcome note');\n      const welcomeNote = {\n        id: Date.now(),\n        title: 'Welcome to TakeNote!',\n        content: `# Welcome to TakeNote!\n\nThis is a simple note-taking app built with React.\n\n## Features:\n- Create and edit notes\n- Add notes to favorites\n- Move notes to trash\n- Search through your notes\n- Data is saved in your browser's local storage\n\nStart by creating your first note!`,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n        isFavorite: false,\n        isDeleted: false\n      };\n      setNotes([welcomeNote]);\n      setSelectedNote(welcomeNote);\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log('Saving notes to localStorage:', notes);\n    localStorage.setItem('takenote-notes', JSON.stringify(notes));\n  }, [notes]);\n\n  const createNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: '',\n      content: '',\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString(),\n      isFavorite: false,\n      isDeleted: false\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setSelectedNote(newNote);\n    return newNote;\n  };\n\n  const updateNote = (updatedNote) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === updatedNote.id ? updatedNote : note\n      )\n    );\n    setSelectedNote(updatedNote);\n  };\n\n  const deleteNote = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { ...note, isDeleted: true, updatedAt: new Date().toISOString() }\n          : note\n      )\n    );\n    if (selectedNote?.id === noteId) {\n      setSelectedNote(null);\n    }\n  };\n\n  const restoreNote = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { ...note, isDeleted: false, updatedAt: new Date().toISOString() }\n          : note\n      )\n    );\n  };\n\n  const permanentDeleteNote = (noteId) => {\n    setNotes(prevNotes => prevNotes.filter(note => note.id !== noteId));\n    if (selectedNote?.id === noteId) {\n      setSelectedNote(null);\n    }\n  };\n\n  const toggleFavorite = (noteId) => {\n    setNotes(prevNotes =>\n      prevNotes.map(note =>\n        note.id === noteId\n          ? { \n              ...note, \n              isFavorite: !note.isFavorite, \n              updatedAt: new Date().toISOString() \n            }\n          : note\n      )\n    );\n  };\n\n  const getFilteredNotes = (category) => {\n    switch (category) {\n      case 'favorites':\n        return notes.filter(note => note.isFavorite && !note.isDeleted);\n      case 'trash':\n        return notes.filter(note => note.isDeleted);\n      case 'all':\n      default:\n        return notes.filter(note => !note.isDeleted);\n    }\n  };\n\n  const getNoteCounts = () => {\n    return {\n      all: notes.filter(note => !note.isDeleted).length,\n      favorites: notes.filter(note => note.isFavorite && !note.isDeleted).length,\n      trash: notes.filter(note => note.isDeleted).length\n    };\n  };\n\n  return {\n    notes,\n    selectedNote,\n    setSelectedNote,\n    createNote,\n    updateNote,\n    deleteNote,\n    restoreNote,\n    permanentDeleteNote,\n    toggleFavorite,\n    getFilteredNotes,\n    getNoteCounts\n  };\n}\n\nexport default useNotes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}